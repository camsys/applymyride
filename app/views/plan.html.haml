.plan
  .container
    .alert.alert-danger.text-center{"ng-show" => "apiError", :role => "alert"}
      %b API Error :
      %span {{ apiStatus }}

    .depart-date{ng: {show: 'step==="fromDate"'}}
      %form
        .form-group
          %label{for: "departDate"}
            %h4 Hi {{ planService.username }}!
            %h4 What day you want to leave?
          %p.input-group
            %input.form-control{'type' => 'text', 'datepicker-popup' => "dd-MMMM-yyyy", 'min-date' => 'minDate', 'is-open' => 'opened', 'datepicker-options' => 'dateOptions', 'close-text' => 'Close', 'ng-model' => 'fromDate',}
              %span.input-group-btn
                %button.btn.btn-default{'type' => 'button', 'ng-click' => 'openCalendar($event)'}
                  %i.glyphicon.glyphicon-calendar

    .depart-time{ng: {show: 'step==="fromTimeType"'}}
      %form
        .form-group
          %label{for: "departTime"}
            %h4 What time are you leaving?
        .row
          .col-md-2.col-md-offset-5
            %a.btn.btn-success.btn-block{ng: {click: 'specifyFromTimeType("asap")'}}
              As soon as possible
            %a.btn.btn-success.btn-block{ng: {click: 'specifyFromTimeType("depart")'}}
              Enter departure time
            %a.btn.btn-success.btn-block{ng: {click: 'specifyFromTimeType("arrive")'}}
              Enter arrival time

    .depart-time{ng: {show: 'step==="fromTime"'}}
      %form
        .form-group
          %label{for: "departTime"}
            %h4 What time would you like to {{ planService.fromTimeType }}?
        .row
          .col-md-2.col-md-offset-5
            %timepicker{ng: {model: 'fromTime'}}

    .use-current-location{ng: {show: 'step==="start_current"'}}
      %h4 Start at your current location?
      %a.btn.btn-success{ng: {click: 'getCurrentLocation()'}}
        Yes
      %a.btn.btn-success{ng: {href: '#/plan/from'}}
        No
      %span{'us-spinner' => '', 'spinner-key' => "spinner-1"}

    .map-wrapper{ng: {show: 'step==="from_confirm" && showConfirmLocationMap'}}
      %form.from-location{name: 'from_location_confirm'}
        %h5 Here's the address we found for your location:
        %h5 {{ planService.from }}
        %div.map-canvas{'ui-map' => 'confirmFromLocationMap', 'ui-options' => 'mapOptions', 'style' => 'margin-bottom: 10px'}
        %a.btn.btn-success{ng: {click: 'next()'}}
          Yes, use this address
        %a.btn.btn-success{ng: {click: 'overrideCurrentLocation()'}}
          No, I'll enter the address myself

      %p
        {{greeting}}

    %form.from-location{name: 'from_location', ng: {show: 'step==="from"'}}
      .form-group
        %label{for: "fromLocation"}
          %h4 Where are you starting from?
        %autocomplete{ 'disable-filter' => 'true', 'data' => 'locations', 'on-type'=> 'getLocations', 'on-select' => 'selectPlace', :ng => {:model => 'fromChoice'}}
        %div.map-canvas{'ui-map' => 'fromLocationMap', 'ui-options' => 'mapOptions', ng: {show: 'showMap'}}

    %form.to-location{ng: {show: 'step==="to"'}}
      .form-group
        %label{for: "toLocation"}
          %h4 Where are you going?
        %autocomplete{ 'disable-filter' => 'true', 'data' => 'locations', 'on-type'=> 'getLocations', 'on-select' => 'selectPlace', :ng => {:model => 'toChoice'}}
        %div.map-canvas{'ui-map' => 'toLocationMap', 'ui-options' => 'mapOptions', ng: {show: 'showMap'}}

    .need-return-trip{ng: {show: 'step==="needReturnTrip"'}}
      %h4 Do you need a return trip?
      %a.btn.btn-success{ng: {href: '#/plan/returnDate'}}
        Yes
      %a.btn.btn-success{ng: {href: '#/plan/confirm'}}
        No

    .return-date{ng: {show: 'step==="returnDate"'}}
      %form
        .form-group
          %label{for: "returnDate"}
            %h4 When do you want to return?
          %p.input-group
            %input.form-control{'type' => 'text', 'datepicker-popup' => "dd-MMMM-yyyy", 'min-date' => 'fromDate', 'is-open' => 'opened', 'datepicker-options' => 'dateOptions', 'close-text' => 'Close', 'ng-model' => 'returnDate',}
              %span.input-group-btn
                %button.btn.btn-default{'type' => 'button', 'ng-click' => 'openCalendar($event)'}
                  %i.glyphicon.glyphicon-calendar

    .depart-time{ng: {show: 'step==="returnTimeType"'}}
      %form
        .form-group
          %label{for: "returnTime"}
            %h4 What time are you returning?
        .row
          .col-md-2.col-md-offset-5
            %a.btn.btn-success.btn-block{ng: {click: 'specifyReturnTimeType("asap")'}}
              As soon as possible
            %a.btn.btn-success.btn-block{ng: {click: 'specifyReturnTimeType("depart")'}}
              Enter departure time
            %a.btn.btn-success.btn-block{ng: {click: 'specifyReturnTimeType("arrive")'}}
              Enter arrival time

    .return-time{ng: {show: 'step==="returnTime"'}}
      %form
        .form-group
          %label{for: "returnTime"}
            %h4 What time would you like to {{ planService.returnTimeType }} on your return trip?
        .row
          .col-md-2.col-md-offset-5
            %timepicker{ng: {model: 'returnTime'}}

    .purpose{ng: {show: 'step==="purpose"'}}
      %h4 What is your trip purpose?
      .row
        .col-md-2.col-md-offset-5
          %a.btn.btn-success.btn-block{ng: {repeat: 'purpose in purposes', click: 'specifyTripPurpose("{{ purpose }}")'}}
            {{ purpose }}

    .confirm{ng: {show: 'step==="confirm"'}}
      %h2 My ride request
      .row.card
        .col-xs-12
          .row
            .col-xs-3.title
              From
            .col-xs-9
              {{ planService.from }}
              .pull-right
                %i.fa.fa-map-marker

      .row.card
        .col-xs-12
          .row
            .col-xs-3.title
              To
            .col-xs-9
              {{ planService.to }}
              .pull-right
                %i.fa.fa-map-marker

      .row.card
        .col-xs-12
          .row
            .col-xs-3.title
              Depart At
            .col-xs-9
              {{ getFromDateString() }}

      .row.card{ng: {show: 'planService.returnTimeType'}}
        .col-xs-12
          .row
            .col-xs-3.title
              Return At
            .col-xs-9
              {{ getReturnDateString() }}

      .row.card
        .col-xs-12
          .row
            .col-xs-3.title
              Purpose
            .col-xs-9
              {{ planService.purpose }}

      .row
        .col-md-2.col-md-offset-5
          %a.btn.btn-success.btn-block{ng: {click: 'next()'}}
            Search for ride!
          %a.btn.btn-success.btn-block{ng: {click: ''}}
            No, change my request

  .container
    .pull-right
      .btn.btn-success{ng: {show: 'showUndo', click: 'undo()'}}
        %i.fa.fa-undo
      %a.btn.btn-success{ng: {show: 'showNext', click: 'next()', disabled: 'disableNext'}}
        Next
        %span{ng: {include: "'views/button-chevron-right.html'"}}
      %a.btn.btn-success{ng: {href: "#/plan2", show: 'readyToPlan()'}}
        Plan My Trip
        %span{ng: {include: "'views/button-chevron-right.html'"}}

